name: CI Pipeline

on:
  push:
    branches:
      - main
      - dev
      - test
      - prod
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Check out the repository
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Create .env file based on environment      
        run: |
          # Determine the branch name from the environment variable
          BRANCH_NAME=${GITHUB_REF}

          if [ -z "$BRANCH_NAME" ]; then
            echo "GITHUB_REF is not set. Exiting..."
            exit 1
          fi
          
          # Determine which .env file to create based on the branch
          if [ "$BRANCH_NAME" == "refs/heads/dev" ]; then
            ENV_FILE=".env.dev"
          elif [ "$BRANCH_NAME" == "refs/heads/test" ]; then
            ENV_FILE=".env.test"
          elif [ "$BRANCH_NAME" == "refs/heads/prod" ]; then
            ENV_FILE=".env.prod"
          elif [ "$BRANCH_NAME" == "refs/heads/main" ]; then
            ENV_FILE=".env.main"
          else
            echo "Branch not recognized: $BRANCH_NAME. Exiting..."
            exit 1
          fi

          # Create the .env file in the repository root
          FILE_PATH="${GITHUB_WORKSPACE}/${ENV_FILE}"
          touch $FILE_PATH

          # Write environment variables
          echo "DATABASE_URL=${DATABASE_URL}" >> $FILE_PATH
          echo "DEBUG=${DEBUG}" >> $FILE_PATH
          echo "POSTGRES_USER=${POSTGRES_USER}" >> $FILE_PATH
          echo "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}" >> $FILE_PATH
          echo "POSTGRES_DB=${POSTGRES_DB}" >> $FILE_PATH

          # Verify .env file was created
          ls -l $FILE_PATH

      - name: Make run-tests.sh executable
        run: chmod +x run-tests.sh

      - name: Run the test script
        working-directory: ${{ github.workspace }}
        run: ./run-tests.sh
     #   env:
     #     DATABASE_URL: ${{ secrets.DATABASE_URL }}
     #     DEBUG: ${{ secrets.DEBUG }}
     #     POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
     #     POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
     #     POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
